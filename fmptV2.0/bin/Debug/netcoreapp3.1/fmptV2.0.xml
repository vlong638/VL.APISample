<?xml version="1.0"?>
<doc>
    <assembly>
        <name>fmptV2</name>
    </assembly>
    <members>
        <member name="T:fmptV2.Common.APIContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.APIContext.HttpContextAccessor">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.APIContext.HttpContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.APIContext.RedisCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.APIContext.DBConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.APIContext.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,fmptV2.Common.Cache.RedisCache,Microsoft.Extensions.Options.IOptions{fmptV2.Common.DBConfig})">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.APIContext.GetWebPath">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.APIContext.GetDBContext(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:fmptV2.Common.APIContraints">
            <summary>
            静态量,常量
            </summary>
        </member>
        <member name="P:fmptV2.Common.APIContraints.DBConfig">
            <summary>
            数据库配置
            </summary>
        </member>
        <member name="P:fmptV2.Common.APIContraints.RedisCache">
            <summary>
            Redis
            </summary>
        </member>
        <member name="T:fmptV2.Common.APIResult">
            <summary>
            Controller层返回结构
            </summary>
        </member>
        <member name="M:fmptV2.Common.APIResult.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="messages"></param>
        </member>
        <member name="M:fmptV2.Common.APIResult.#ctor(System.Int32,System.String[])">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="messages"></param>
        </member>
        <member name="P:fmptV2.Common.APIResult.Message">
            <summary>
            信息
            </summary>
        </member>
        <member name="P:fmptV2.Common.APIResult.Code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="T:fmptV2.Common.APIResult`1">
            <summary>
            Controller层返回结构
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:fmptV2.Common.APIResult`1.#ctor(`0,System.Int32,System.String[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="code"></param>
            <param name="messages"></param>
        </member>
        <member name="M:fmptV2.Common.APIResult`1.#ctor(`0,System.String[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="messages"></param>
        </member>
        <member name="M:fmptV2.Common.APIResult`1.#ctor(fmptV2.Common.ServiceResult{`0})">
            <summary>
            
            </summary>
            <param name="serviceResult"></param>
        </member>
        <member name="M:fmptV2.Common.APIResult`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.APIResult`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:fmptV2.Common.GlobalExceptionFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:fmptV2.Common.VLAuthenticationAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.VLAuthenticationAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.VLAuthenticationAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:fmptV2.Common.VLAuthorizeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.VLAuthorizeAttribute.#ctor(fmptV2.Common.SystemAuthority[])">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.VLAuthorizeAttribute.Authorities">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.VLAuthorizeAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:fmptV2.Common.SystemAuthority">
            <summary>
            权限 
            前三位代表业务系统,后三位表示模块内功能模块,后三位表示功能模块内细分功能
            通用功能为000
            </summary>
        </member>
        <member name="T:fmptV2.Common.Cache.RedisCache">
            <summary>
            Redis 缓存实现
            </summary>
        </member>
        <member name="F:fmptV2.Common.Cache.RedisCache.prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.#ctor(System.String,System.String)">
            <summary>
            构造一个RedisCache实例
            </summary>
            <param name="redisConnectStr">redis链接字符串</param>
            <param name="prefix">缓存key前缀</param>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.Add``1(System.String,``0,System.DateTime)">
            <summary>
            添加对象到缓存,如果已存在或添加失败则抛出异常
            </summary>
            <typeparam name="T">缓存值的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="value">缓存值</param>
            <param name="expiry">过期时间，支持本地时间，内部实现将自动转UTC时间</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>或<paramref name="value"/> 参数为null</exception>
            <exception cref="T:System.ArgumentException"><paramref name="key"/> 已经存在值</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="expiry"/> 为DateTime.MinValue</exception>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.Get``1(System.String)">
            <summary>
            获取缓存，如果不存在，则返回null，如果<typeparamref name="T"/>不能为空，则抛出异常
            </summary>
            <typeparam name="T">要获取的值类型</typeparam>
            <param name="key">缓存key</param>
            <returns>返回获取的缓存值</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>为null</exception>
            <exception cref="T:System.NullReferenceException">获取缓存值为空，且<typeparamref name="T"/>为值类型，无法强制转转</exception>
            <exception cref="T:System.InvalidCastException">获取的缓存值无法转换为<typeparamref name="T"/></exception>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.Get``1(System.String,System.Func{``0},System.DateTime,System.Boolean)">
            <summary>
            获取缓存，如果未找到，则使用acquire设置缓存并返回新值
            </summary>
            <typeparam name="T">缓存值类型</typeparam>
            <param name="key">缓存key</param>
            <param name="acquire">获取新缓存值的方法</param>
            <param name="expiry">过期时间</param>
            <param name="refreshForce">是否直接刷新新值，如果为true，则使用acquire获取新值刷新缓存并返回；如果为false，则缓存未找到值时，则使用acquire获取新值刷新缓存并返回</param>
            <returns>返回缓存值</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>或<paramref name="acquire"/>的返回值 为null</exception>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.Remove(System.String)">
            <summary>
            移除指定key的缓存
            </summary>
            <param name="key">要移除的缓存key</param>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.Set``1(System.String,``0,System.DateTime)">
            <summary>
            设置对象的值到指定的key，如果不存在则添加一个；如果存在，则覆盖旧值
            </summary>
            <typeparam name="T">缓存值的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="value">缓存值</param>
            <param name="expiry">过期时间</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>或<paramref name="value"/> 参数为null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="expiry"/> 为DateTime.MinValue</exception>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.TryGet``1(System.String,``0@)">
            <summary>
            获取缓存，如果存在则返回true，并输出值；如果不存在，则返回false, value将赋值为default(T)
            </summary>
            <typeparam name="T">要获取的值的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="value">如果存在则返回true，并输出值；如果不存在，则返回false, value将赋值为default(T)</param>
            <returns>如果缓存值存在且类型转换成功，则返回true，否则返回false</returns>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.GetCacheKey(System.String)">
            <summary>
            获取缓存的key值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.ConvertJson``1(``0)">
            <summary>
            将对象转换成Json字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.ConvertObj``1(System.String)">
            <summary>
            将字符串转换成对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.Cache.RedisCache.GetTimeSpan(System.DateTime)">
            <summary>
            获取时间间隔
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:fmptV2.Common.DateTimeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.DateTimeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.DateTimeConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:fmptV2.Common.DateTimeNullableConvert">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.DateTimeNullableConvert.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.DateTimeNullableConvert.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.DateTime},System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:fmptV2.Common.DbContext">
            <summary>
            数据库访问上下文
            </summary>
        </member>
        <member name="P:fmptV2.Common.DbContext.DbGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.DbContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.DbContext.#ctor(System.Data.IDbConnection)">
            <summary>
            
            </summary>
            <param name="connection"></param>
        </member>
        <member name="T:fmptV2.Common.UnitOfWork">
            <summary>
            工作单元模式
            负责组合事务的定义
            </summary>
        </member>
        <member name="T:fmptV2.Common.DbContextEX">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.DbContextEX.DelegateTransaction``1(fmptV2.Common.DbContext,System.Func{fmptV2.Common.DbGroup,``0})">
            <summary>
            扩展事务(服务层)通用处理
            </summary>
        </member>
        <member name="M:fmptV2.Common.DbContextEX.DelegateNonTransaction``1(fmptV2.Common.DbContext,System.Func{fmptV2.Common.DbGroup,``0})">
            <summary>
            扩展事务(服务层)通用处理
            </summary>
        </member>
        <member name="T:fmptV2.Common.DbGroup">
            <summary>
            数据库访问单元:支持事务及跨库协作
            </summary>
        </member>
        <member name="F:fmptV2.Common.DbGroup.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="F:fmptV2.Common.DbGroup.Command">
            <summary>
            
            </summary>
        </member>
        <member name="F:fmptV2.Common.DbGroup.Transaction">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.DbGroup.#ctor(System.Data.IDbConnection)">
            <summary>
            
            </summary>
            <param name="dbConnection"></param>
        </member>
        <member name="T:fmptV2.Common.DBHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.DBHelper.GetDbConnection(System.String)">
            <summary>
            创建数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.DBHelper.GetDbContext(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:fmptV2.Common.Filters.AuthHeaderFilter">
            <summary>
            自定义header扩展
            </summary>
        </member>
        <member name="M:fmptV2.Common.Filters.AuthHeaderFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:fmptV2.Common.Log4NetLogger">
            <summary>
            Log4Net Logger
            </summary>
        </member>
        <member name="M:fmptV2.Common.Log4NetLogger.Info(System.String,System.Exception)">
            <summary>
            普通日志
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:fmptV2.Common.Log4NetLogger.Warn(System.String,System.Exception)">
            <summary>
            告警日志
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:fmptV2.Common.Log4NetLogger.Error(System.String,System.Exception)">
            <summary>
            错误日志
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:fmptV2.Common.Log4NetLogger.LogSQL(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            DHF日志
            </summary>
        </member>
        <member name="T:fmptV2.Common.User">
            <summary>
            
            </summary>
        </member>
        <member name="F:fmptV2.Common.User.TableName">
            <summary>
            
            </summary>
        </member>
        <member name="T:fmptV2.Common.Sex">
            <summary>
            
            </summary>
        </member>
        <member name="F:fmptV2.Common.Sex.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:fmptV2.Common.Sex.Man">
            <summary>
            
            </summary>
        </member>
        <member name="F:fmptV2.Common.Sex.Woman">
            <summary>
            
            </summary>
        </member>
        <member name="T:fmptV2.Common.CORSConfig">
            <summary>
            配置样例
            </summary>
        </member>
        <member name="P:fmptV2.Common.CORSConfig.Origins">
            <summary>
            
            </summary>
        </member>
        <member name="T:fmptV2.Common.VLKeyValue">
            <summary>
            键值对
            </summary>
        </member>
        <member name="P:fmptV2.Common.VLKeyValue.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.VLKeyValue.Value">
            <summary>
            /
            </summary>
        </member>
        <member name="T:fmptV2.Common.DBConfig">
            <summary>
            配置样例
            </summary>
        </member>
        <member name="P:fmptV2.Common.DBConfig.ConnectionStrings">
            <summary>
            
            </summary>
        </member>
        <member name="T:fmptV2.Common.LoginRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.LoginRequest.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:fmptV2.Common.LoginRequest.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:fmptV2.Common.RepositorySolution.IRepository`1">
            <summary>
            基础的仓储服务
            </summary>
        </member>
        <member name="M:fmptV2.Common.RepositorySolution.IRepository`1.Insert(`0)">
            <summary>
            插入单条数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.RepositorySolution.IRepository`1.Update(`0)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.RepositorySolution.IRepository`1.DeleteById(System.Int64)">
            <summary>
            根据Id删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.RepositorySolution.IRepository`1.GetById(System.Int64)">
            <summary>
            根据ID获取实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:fmptV2.Common.ServiceResult">
            <summary>
            Service层返回结构
            </summary>
        </member>
        <member name="F:fmptV2.Common.ServiceResult.SuccessCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.ServiceResult.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="messages"></param>
        </member>
        <member name="M:fmptV2.Common.ServiceResult.#ctor(System.Int32,System.String[])">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="messages"></param>
        </member>
        <member name="P:fmptV2.Common.ServiceResult.Messages">
            <summary>
            信息
            </summary>
        </member>
        <member name="P:fmptV2.Common.ServiceResult.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:fmptV2.Common.ServiceResult.Code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:fmptV2.Common.ServiceResult.IsSuccess">
            <summary>
            是否成功
            诸如以下的业务异常
            false case: 校验未通过(通用或非通用校验)
            false case: 需事务回滚的异常逻辑
            诸如以下的组件异常
            false case: 数据库连接异常
            false case: 事务执行异常
            false case: 数据库更新异常(如主外键限制,字符串长度截断等)
            false case: 消息发送失败
            </summary>
        </member>
        <member name="T:fmptV2.Common.ServiceResult`1">
            <summary>
            服务端返回结构
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:fmptV2.Common.ServiceResult`1.#ctor(`0,System.Int32,System.String[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="code"></param>
            <param name="messages"></param>
        </member>
        <member name="M:fmptV2.Common.ServiceResult`1.#ctor(`0,System.String[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="messages"></param>
        </member>
        <member name="P:fmptV2.Common.ServiceResult`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:fmptV2.Common.DataTableEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.DataTableEx.ToList(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.DataTableEx.ToDataTable``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="datas"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.MD5Ex.ToMD5(System.String)">
            <summary>
            通过字符串获取MD5值，返回32位字符串。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.ValueEx.GetNestedContent(System.String,System.String,System.String)">
            <summary>
            兼容嵌套
            </summary>
            <param name="str"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.ValueEx.SplitByMatchesWithNested(System.String,System.String,System.String)">
            <summary>
            兼容嵌套
            </summary>
            <param name="str"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Common.ValueEx.GetSubStringOrEmpty(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="start">0-based</param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:fmptV2.Common.VLAutoMappler">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Common.VLAutoMappler.MapTo(System.Object,System.Object)">
            <summary>
            注意,只自动匹配 '类型'和'名称'一致的属性
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="T:fmptV2.Controllers.HomeController">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Controllers.HomeController.Login(fmptV2.Common.APIContext,fmptV2.Services.AccountService,fmptV2.Common.LoginRequest)">
            <summary>
            登陆
            </summary>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Controllers.WeatherForecastController.GetWeatherForecast">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:fmptV2.Controllers.WeatherForecastController.TestRedis(fmptV2.Common.Cache.RedisCache)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:fmptV2.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:fmptV2.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:fmptV2.Services.AccountService">
            <summary>
            
            </summary>
        </member>
        <member name="M:fmptV2.Services.AccountService.#ctor(fmptV2.Common.APIContext)">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
